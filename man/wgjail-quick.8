.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "" "" "" "" ""
.SH Usage
\f[CR]wgjail\-quick [ up | down ] [ CONFIG_FILE | INTERFACE ]\f[R]
.PD 0
.P
.PD
\f[CR]wgjail\-quick exec [ CONFIG_FILE | INTERFACE ] USERNAME CMD_LINE\f[R]
.PD 0
.P
.PD
\f[CR]wgjail\-quick portforward [ CONFIG_FILE | INTERFACE ] LISTEN_ADDRESS FORWARDED_PORT [ DESTINATION_PORT ]\f[R]
.PD 0
.P
.PD
\f[CR]wgjail\-quick generate\-jail\-service [ CONFIG_FILE | INTERFACE ]\f[R]
.PD 0
.P
.PD
\f[CR]wgjail\-quick generate\-cmd\-service [ CONFIG_FILE | INTERFACE ] CMD_LINE\f[R]
.PD 0
.P
.PD
\f[CR]wgjail\-quick generate\-portforward\-service [ CONFIG_FILE | INTERFACE ] LISTEN_ADDRESS FORWARDED_PORT [ DESTINATION_PORT ]\f[R]
.PP
CONFIG_FILE is a path to a wireguard configuration file.
Using an absolute path is a good idea.
.PP
INTERFACE is a wireguard config file that is in /etc/wireguard
.PD 0
.P
.PD
Which means, you only have to write, for example, \[lq]p2p\[rq] to use
the wireguard config file /etc/wireguard/p2p.conf
.PP
The portion of the config files basename before the .conf is the name
that will be given to: 1.
the network namespace (the \[lq]wireguard jail\[rq]) and 2.
The wireguard interface inside the network namespace.
.PP
CMD_LINE is a command with command line arguments that you want to
execute in the namespace.
.SH Commands
.SS up
Creates a new network namespace with a wireguard interface defined in
the given config file.
.SS down
Removes the given network namespace.
.SS exec
Executes a command in the given network namespace.
.PD 0
.P
.PD
USERNAME is the username or uid of the user that shall execute the given
command.
.SS portforward
Forwards a port into the network namespace.
You have to specify on which Address to listen and which port to
forward.
Use 0.0.0.0 to listen everywhere.
.PD 0
.P
.PD
Optionally you can also define a destination port inside of the network
namespace that is different from the port on which the host system
listens.
If not given, the same port is used.
.SS generate\-jail\-service
Generates a systemd service that creates a network namespace, like with
the up command.
Result will be saved to the current directory
(\f[CR]./wgjail\-NAMESPACE.service\f[R]).
.PD 0
.P
.PD
This service will expect to find the configuration file at the same
absolute path on every start.
Make sure you generate the service either with the absolute path to
where the config file will be permanently or, if you plan to put the
config file into `/etc/wireguard/CONFIG_FILE.conf', it is enough to give
the filename before the `.conf' without any path.
.SS generate\-cmd\-service
Generates a systemd template service that starts the given command
inside the given network namespace, like the exec keyword.
.PD 0
.P
.PD
When you start this service, make sure you append the username that
shall run the command after the `\[at]' symbol,
e.g.\ `\f[CR]systemctl start wgjail\-NAMESPACE\-CMD\[at]myuser.service\f[R]'.
Result will be saved to the current directory
(\f[CR]./wgjail\-NAMESPACE\-CMD\[at].service\f[R]).
.PD 0
.P
.PD
CMD will be substituted by the name of the command.
The parameters will not be inserted into the filename.
If you want to create multiple services for the same command you have to
rename them manually.
.PD 0
.P
.PD
The network namespace this service references has to also be started via
a systemd service (e.g.\ with a service generated by the
\[lq]generate\-jail\-service\[rq] command), so that systemd can make
sure that the jail already exists before it tries to execute this
command inside the jail.
This cmd service will bind to the jail service and will automatically be
stopped if the jail service is stopped.
.SS generate\-portforward\-service
Generates a systemd template service that forwards a port into the
network namespace (the wireguard jail).
.PD 0
.P
.PD
Result will be saved to the current
directory(`\f[CR]wgjail\-NAMESPACE\-portforward\-LISTEN_ADDRESS\-FORWARDED_PORT.service\f[R]').
.PD 0
.P
.PD
Optionally you can also define a destination port inside of the network
namespace that is different from the port on which the host system
listens.
If not given, the same port is used.
.PD 0
.P
.PD
The network namespace this service references has to also be started via
a systemd service (e.g.\ with a service generated by the
\[lq]generate\-jail\-service\[rq] command), so that systemd can make
sure that the jail already exists before it tries to execute this
command inside the jail.
This cmd service will bind to the jail service and will automatically be
stopped if the jail service is stopped.
.SH Usage Examples
.SS Temporary
If you want to, for example, just quickly torrent an iso of Hannah
Montana Linux, which is not a metaphor for something else, and you want
to make sure your torrent client only uses a vpn connection and under no
circumstances your normal internet connection, while the rest of your
system continues just as normal, you can do it this way:
.PD 0
.P
.PD
\f[CR]sudo wgjail\-quick up /path/to/<wireguard_config>.conf\f[R]
.PD 0
.P
.PD
\f[CR]sudo wgjail\-quick exec /path/to/<wireguard_config>.conf <your_username> qbittorrent\f[R]
.PD 0
.P
.PD
When you\[cq]re done, close the qbittorrent window, then:
.PD 0
.P
.PD
\f[CR]sudo wgjail\-quick down /path/to/<wireguard_config>.conf\f[R]
.PD 0
.P
.PD
Done, very easy.
.SS Permanently via systemd services
If you now, for example, have set up a dedicated server to seed your
Hannah Montana Linux iso image, you can, with wgjail\-quick, create
systemd files that automatically, on boot: 1.
create the wireguard jail, then 2.
start qbittorrent\-nox (nox means webUI, so that you can connect to your
server via a webbrowser and can use qbittorrent this way), then 3.
forward a port into the wireguard jail, so that you can access the
webinterface of qbittorrent:
.PP
\f[CR]wgjail\-quick generate\-jail\-service /path/to/<wireguard_config>.conf\f[R]
.PD 0
.P
.PD
\f[CR]wgjail\-quick generate\-cmd\-service /path/to/<wireguard_config>.conf /usr/bin/qbittorrent\-nox \-d \-\-webui\-port=6969\f[R]
.PD 0
.P
.PD
\f[CR]wgjail\-quick generate\-portforward\-service /path/to/<wireguard_config>.conf 0.0.0.0 6969\f[R]
.PP
Now you can copy these systemd files to \f[CR]/etc/systemd/system\f[R]
and enable them.
The filenames are different depending on how you named your wireguard
conf file (just like wg\-quick sets the name of the interface it creates
according to the filename of the .conf file).
If, for example, your wireguard config file was named
\[lq]my\-wg.conf\[rq] and the username with which you want to start the
qbittorrent server is \[lq]myuser\[rq], then you can copy and start the
services, for example, like this:
.PD 0
.P
.PD
\f[CR]sudo cp wgjail\-my\-wg.service wgjail\-my\-wg\-qbittorrent\-nox\[at].service wgjail\-my\-wg\-portforward\-0.0.0.0\-6969.service /etc/systemd/system\f[R]
.PD 0
.P
.PD
\f[CR]sudo systemctl enable \-\-now wgjail\-my\-wg.service wgjail\-my\-wg\-qbittorrent\-nox\[at]myuser.service wgjail\-my\-wg\-portforward\-0.0.0.0\-6969.service\f[R]
.PP
SPDX\-License\-Identifier: CC0\-1.0+
.PD 0
.P
.PD
Â© 2024\-2025 Stephan Hegemann
